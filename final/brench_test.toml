# which benchmarks to run
benchmarks = '../benchmarks/**/*.bril'
# how to extract the performance metric from stderr
extract = 'total_dyn_inst: (\d+)'

[runs.baseline]
pipeline = [
  "bril2json",
  "brili -p {args}",
]

[runs.task2]
pipeline = [
  "bril2json",
  "python constant.py",
  "python lvn.py",
  "python liveness_dce.py",
  "brili -p {args}",
]

[runs.inline_optimal_ic]
pipeline = [
  "bril2json",
  "python inline.py optimal_ic",
  "python idce.py",
  "python constant.py",
  "python lvn.py",
  "python liveness_dce.py",
  "brili -p {args}",
]

[runs.inline_fn_size_10]
pipeline = [
  "bril2json",
  "python inline.py fn_size 10",
  "python idce.py",
  "python constant.py",
  "python lvn.py",
  "python liveness_dce.py",
  "brili -p {args}",
]

[runs.inline_fn_size_20]
pipeline = [
  "bril2json",
  "python inline.py fn_size 20",
  "python idce.py",
  "python constant.py",
  "python lvn.py",
  "python liveness_dce.py",
  "brili -p {args}",
]

[runs.inline_in_loop]
pipeline = [
  "bril2json",
  "python inline.py in_loop",
  "python idce.py",
  "python constant.py",
  "python lvn.py",
  "python liveness_dce.py",
  "brili -p {args}",
]

[runs.inline_single_call_site]
pipeline = [
  "bril2json",
  "python inline.py single_call_site",
  "python idce.py",
  "python constant.py",
  "python lvn.py",
  "python liveness_dce.py",
  "brili -p {args}",
]

[runs.inline_arg_constantness]
pipeline = [
  "bril2json",
  "python inline.py arg_constantness",
  "python idce.py",
  "python constant.py",
  "python lvn.py",
  "python liveness_dce.py",
  "brili -p {args}",
]